{"title":"ARIMAX/SARIMAX/VAR","markdown":{"yaml":{"title":"ARIMAX/SARIMAX/VAR","editor_options":{"chunk_output_type":"inline"},"bibliography":"reference.bib"},"headingText":"Exogenous Variables","containsRefs":false,"markdown":"\n\n```{r include = FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n```{r setup, include = FALSE}\nlibrary(vars)\nlibrary(reticulate)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(forecast)\nlibrary(TSstudio)\nlibrary(tseries)\nlibrary(gridExtra)\nlibrary(kableExtra)\nlibrary(astsa)\nload(\"unrate.Rdata\")\nload(\"arrest_data.Rdata\")\nload(\"arrests_ts.Rdata\")\n```\n\n```{r}\nunrate_ts <- ts(df$unrate, start = c(2006, 1), frequency = 12)\n```\n\n\nThe number of arrests made in any city, especially one as large and diverse as New York City, is a figure that is influenced by many variables in addition to time. This means that modelling the number of arrests only on time may result in overlooking valuable information that could be used to fit a model that could forecast arrests even more accurately. Similar work has been done in the past, relating both the economy and labor markets to crime statistics.\n\nWe will take that approach here, drawing inspiration on the work mentioned in the introduction by Freeman in which he looks at \"the way decisions interact in a market setting\" [@freeman_chapter_1999]. He exhibits an important understanding of the influence economic factors have on crime, treating crime rates as another variable in our complex economic system. Looking at the labor market would be beneficial as well, as in the 1980's and 90's crime was seen to be closely related to unemployment rates [@gould_crime_2002].\n\nAnother variable that might be useful to look at is the state of the current election cycle. It is possible that when public officials are up for re-election, they might be more incentivized to take more action to lower crime rates.\n\n# Models to Fit\n\nTwo types of models will be fit here. We will use an ARIMAX or SARIMAX model when looking at the effect of one or more exogenous variables in predicting the number of arrests. We will use a VAR model when looking at how crime and other time series variables are influenced by each other. The specific models are listed below:\n\n-   (ARIMAX) Total Arrests \\~ Unemployment Rate\n\n-   (ARIMAX) Total Arrests \\~ Election Year\n\n-   (ARIMAX) Murder \\~ Unemployment Rate + GDP\n\n-   (VAR) Robbery \\~ Unemployment Rate\n\n-   (VAR) Controlled Substance Possession \\~ Marijuana Possession\n\n## Total Arrests ~ Unemployment Rate\n\nWe have a univariate time series in total arrests and we want to see the effect the exogenous variable of unemployment rate has on that time series. We will fit an ARIMAX model, Total Arrests \\~ Unemployment Rate. Unemployment data is for the New York City Metropolitan Area and obtained from [here](https://fred.stlouisfed.org/categories/30789).\n\n```{r}\nmonth <- as.Date(arrests_by_crime$month)\ndd <- data.frame(month, arrests = arrests_ts, unrate = unrate_ts)\n\nkable(head(dd))\n```\n\n```{r}\ndd.ts <- ts(dd, start = c(2006, 1), frequency = 12)\n\nautoplot(dd.ts[,c(2,3)], facets = TRUE) +\n  xlab(\"Year\") + ylab(\"\") +\n  ggtitle(\"Variables influencing Arrests in NYC\")\n```\n\nThere looks to be some relation between these two variables, with the spike in 2020 in unemployment rate being at the same time as the low arrest rate, though we should fit a model to see if this relationship is substantial.\n\n### Fitting Using auto.arima\n\n```{r}\nxreg <- cbind(unrate = dd.ts[,\"unrate\"])\n\nauto_model <- auto.arima(dd.ts[,\"arrests\"], xreg = xreg)\nsummary(auto_model)\ncheckresiduals(auto_model)\n```\n\nWe have a SARIMAX model, a regression model with ARIMA(0,1,2)(2,0,0)\\[12\\] errors.\n\n### Fitting Manually\n\nWe first fit a linear regression model predicting arrests using unemployment rate. The we will fit an ARIMA/SARIMA model for the residuals.\n\n```{r}\nfit.reg <- lm(arrests ~ unrate, data = dd)\nsummary(fit.reg)\n```\n\n```{r, echo = TRUE}\nres.fit <- ts(residuals(fit.reg), start = c(2006, 1), frequency = 12)\nggtsdisplay(res.fit)\nggtsdisplay(res.fit %>% diff())\nggtsdisplay(res.fit %>% diff() %>% diff(12))\n```\n\nWe will try the following parameters:\n\n-   p: 1, 4\n-   d: 0, 1\n-   q: 1, 4\n-   P: 1\n-   D: 0, 1\n-   Q: 1, 2, 3\n\n```{r}\ni <- 1\n\ntemp <- data.frame()\nls <- matrix(rep(NA,9*28), nrow=28)\n\nfor(p in c(1,4)){\n  for(q in c(1,4)){\n    for(d in c(0,1)){\n      for(P in c(1)){\n        for(Q in c(1,2,3)){\n          for(D in c(0,1)){\n            if(p + d + q + P + D + Q<= 9){\n              tryCatch({\n                model <- Arima(res.fit, order = c(p, d, q), seasonal = c(P, D, Q))\n                ls[i,] <- c(p, d, q, P, D, Q, model$aic, model$bic, model$aicc)\n              }, error = function(err) {\n                cat()\n              }, finally = {\n                i <- i + 1\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\ntemp <- as.data.frame(ls)\nnames(temp) <- c(\"p\",\"d\",\"q\",\"P\", \"D\", \"Q\", \"AIC\",\"BIC\",\"AICc\")\n\n\n\n```\n\n### Model Selection and Diagnostics\n\n#### Minimum AIC\n\n```{r, echo=FALSE}\nkable(temp[which.min(temp$AIC),])\n```\n\n#### Minimum BIC\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$BIC),])\n```\n\n#### Minimum AICc\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$AICc),])\n```\n\nIt is clear that the best model is one with parameters $p=1, d=1, q=1, P=1, D=1, Q=3$. We now check the model diagnostics.\n\n```{r, echo = FALSE}\nset.seed(621)\nmodel_output <- capture.output(sarima(res.fit, 1, 1, 1, 1, 1, 3, 12))\n```\n\nThe Ljung-Box statistic p-values suggest that there is no correlation between residuals, meaning we have a good enough model. We will proceed with the model SARIMA(1, 1, 1)(1, 1, 2)12. The information criteria are all similar between the auto model and this model. We will proceed with this model. \n\n#### Fitted vs. Actual\n\n```{r, echo=FALSE}\nmodel_fit <- Arima(res.fit, order = c(1, 1, 1), seasonal = c(1, 1, 3))\nplot(res.fit, col = \"blue\")\nlines(fitted(model_fit), col = \"green\")\nlegend(x = \"topright\", legend = c(\"res.fit\", \"fit1\"), fill = 4:1)\n```\n\n### Cross Validation\n```{r}\n# minimum data length for fitting\nk <- 48\nn <- length(res.fit)\n\nst <- tsp(res.fit)[1] + (k - 2)/12 # ending point: October 2009\n\n\nrmse1 <- matrix(NA,n-k,12)\nrmse2 <- matrix(NA,n-k,12)\n\nfor(i in 1:(n - k)) {\n  tryCatch({\n    xtrain <- window(res.fit, end = st + i/12)\n    xtest <- window(res.fit, start = st + (i + 1)/12, end = st + (i + 12)/12)\n    \n    fit1 <- Arima(xtrain, \n                 order = c(1, 1, 1), \n                 seasonal = c(1, 1, 3),\n                 method = \"ML\")\n    \n    fcast1 <- forecast(fit1, h = 12)\n    \n    fit2 <- Arima(xtrain, \n                 order = c(0, 1, 2), \n                 seasonal = c(2, 0, 0),\n                 method = \"ML\")\n    \n    fcast2 <- forecast(fit2, h = 12)\n    \n    rmse1[i, 1:length(xtest)] <- sqrt((fcast1$mean-xtest)^2)\n    rmse2[i, 1:length(xtest)] <- sqrt((fcast2$mean-xtest)^2)\n  }, error = function(err) {\n                cat()\n              })\n}\n\nplot(1:12, colMeans(rmse1,na.rm=TRUE), type=\"l\", col=2, xlab=\"horizon\", ylab=\"RMSE\")\nlines(1:12, colMeans(rmse2,na.rm=TRUE), type=\"l\", col=3, xlab=\"horizon\", ylab=\"RMSE2\")\nlegend(\"topleft\",legend=c(\"manual fit\",\"auto fit\"),col=2:3,lty=1)\n```\n\n\n### Forecasting\n\n```{r, echo = FALSE}\nmodel_fit %>% forecast %>% autoplot()\n```\n\n\n## Total Arrests \\~ Election Year\n\n## Murder \\~ Unemployment Rate\n\n```{r}\nmonth <- as.Date(arrests_by_crime$month)\ndd <- data.frame(month, murder = murder_ts, unrate = unrate_ts)\n\nkable(head(dd))\n```\n\n```{r}\ndd.ts <- ts(dd, start = c(2006, 1), frequency = 12)\n\nautoplot(dd.ts[,c(2,3)], facets = TRUE) +\n  xlab(\"Year\") + ylab(\"\") +\n  ggtitle(\"Variables influencing Arrests in NYC\")\n```\n\nThere looks to be some relation between these two variables, though we should fit a model to see if this relationship is substantial.\n\n### Fitting Using auto.arima\n\n```{r}\nxreg <- cbind(unrate = dd.ts[,\"unrate\"])\n\nauto_model <- auto.arima(dd.ts[,\"murder\"], xreg = xreg)\nsummary(auto_model)\ncheckresiduals(auto_model)\n```\n\nWe have an ARIMAX model, a regression model with ARIMA(0,1,1) errors.\n\n### Fitting Manually\n\nWe first fit a linear regression model predicting arrests using unemployment rate. The we will fit an ARIMA/SARIMA model for the residuals.\n\n```{r}\nfit.reg <- lm(murder ~ unrate, data = dd)\nsummary(fit.reg)\n```\n\n```{r, echo = TRUE}\nres.fit <- ts(residuals(fit.reg), start = c(2006, 1), frequency = 12)\nggtsdisplay(res.fit)\nggtsdisplay(res.fit %>% diff())\n```\n\nWe will try the following parameters:\n\n-   p: 1, 2, 4\n-   d: 0, 1\n-   q: 1\n\n```{r}\ni <- 1\n\ntemp <- data.frame()\nls <- matrix(rep(NA,6*5), nrow=5)\n\nfor(p in c(1,4)){\n  for(q in c(1,4)){\n    for(d in c(0,1)){\n      if(p + d + q + P + D + Q<= 9){\n        tryCatch({\n          model <- Arima(res.fit, order = c(p, d, q))\n          ls[i,] <- c(p, d, q, model$aic, model$bic, model$aicc)\n        }, error = function(err) {\n          cat()\n        }, finally = {\n          i <- i + 1\n        })\n      }\n    }\n  }\n}\n\ntemp <- as.data.frame(ls)\nnames(temp) <- c(\"p\",\"d\",\"q\", \"AIC\",\"BIC\",\"AICc\")\n```\n\n### Model Selection and Diagnostics\n\n#### Minimum AIC\n\n```{r, echo=FALSE}\nkable(temp[which.min(temp$AIC),])\n```\n\n#### Minimum BIC\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$BIC),])\n```\n\n#### Minimum AICc\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$AICc),])\n```\n\nIt is clear that the best model is one with parameters $p=1, d=1, q=1$. We now check the model diagnostics.\n\n```{r, echo = FALSE}\nset.seed(621)\nmodel_output <- capture.output(sarima(res.fit, 1, 1, 1))\n```\n\n#### Fitted vs. Actual\n\n```{r, echo=FALSE}\nmodel_fit <- Arima(res.fit, order = c(1, 1, 1))\nplot(res.fit, col = \"blue\")\nlines(fitted(model_fit), col = \"green\")\nlegend(x = \"topright\", legend = c(\"res.fit\", \"fit1\"), fill = 4:1)\n```\n\n### Cross Validation\n\n### Forecasting\n\n```{r, echo = FALSE}\nmodel_fit %>% forecast %>% autoplot()\n```\n\nAdding unemployment rate resulted in little change from the previous model, suggesting that the two are not related.  \n\n## Robbery \\~ Unemployment Rate\n\n```{r}\nmonth <- as.Date(arrests_by_crime$month)\ndd <- data.frame(month, robbery = robbery_ts, unrate = unrate_ts)\n\nkable(head(dd))\n```\n\n```{r}\ndd.ts <- ts(dd, start = c(2006, 1), frequency = 12)\n\nautoplot(dd.ts[,c(2,3)], facets = TRUE) +\n  xlab(\"Year\") + ylab(\"\") +\n  ggtitle(\"Variables influencing Robbery Arrests in NYC\")\n```\n\nThere looks to be some relation between these two variables, with the spike in 2020 in unemployment rate being at the same time as the low arrest rate, though we should fit a model to see if this relationship is substantial.\n\n### Fitting Using VARSelect\n\n```{r}\nVARselect(dd[,c(2,3)], lag.max = 10, type = \"both\")\n```\n\nClearly p = 3 is a good parameter, we will also try VAR(1) in addition to VAR(3)\n\n```{r}\nsummary(vars::VAR(dd[, c(2,3)], p = 1, type = \"both\"))\nsummary(vars::VAR(dd[, c(2,3)], p = 3, type = \"both\"))\n```\n\n### Cross Validation\n```{r}\nts <- ts(dd[,c(2,3)], start = c(2006, 1), frequency = 12)\n\nk <- 72\n\nrmse1 <- matrix(NA, 132, 2)\nrmse2 <- matrix(NA, 132, 2)\n\nyear <- c()\n\nst <- tsp(ts)[1] + (k - 1)/12\n\nfor(i in 1:11) {\n  xtrain <- window(ts, end=st + i-1)\n  xtest <- window(ts, start=st + (i-1) + 1/12, end=st + i)\n  \n  # first model\n  fit <- VAR(ts, p=1, type='both')\n  fcast <- predict(fit, n.ahead = 12)\n  \n  frob<-fcast$fcst$robbery\n  funr<-fcast$fcst$unrate\n  \n  ff<-data.frame(frob[,1],funr[,1]) #collecting the forecasts for 2 variables\n  \n  year<-st + (i-1) + 1/12 #starting year\n  \n  ff<-ts(ff,start=c(year,1),frequency = 12)\n  \n  a = 12*i-11\n  b= 12*i \n  \n  tryCatch({\n    rmse1[c(a:b),]  <- sqrt((ff-xtest)^2)\n  }, error = function(err) {\n      cat(a, b)\n      rmse1[c(a:b),]  <- sqrt((ff-xtest)^2)\n  })\n  \n  \n  # second model\n  fit2 <- VAR(ts, p=3, type='both')\n  fcast2 <- predict(fit2, n.ahead = 12)\n  \n  frob<-fcast2$fcst$robbery\n  funr<-fcast2$fcst$unrate\n  \n  ff2<-data.frame(frob[,1],funr[,1]) #collecting the forecasts for 3 variables\n  \n  year<-st + (i-1) + 1/12 #starting year\n  \n  ff2<-ts(ff2,start=c(year,1),frequency = 12)\n  \n  a = 12*i-11\n  b= 12*i \n  \n  tryCatch({\n    rmse2[c(a:b),]  <- sqrt((ff2-xtest)^2)\n  }, error = function(err) {\n      cat(a, b)\n      rmse2[c(a:b),]  <- sqrt((ff2-xtest)^2)\n  })\n}\n```\n\n```{r}\nyr = rep(c(2012:2022),each =12) #year\nm = rep(paste0(1:12),11) #month\n\nrmse1 <- data.frame(yr,m,rmse1)\nrmse1$date <- as.Date(paste(rmse1$yr, rmse1$m, \"01\", sep = \"-\"))\nnames(rmse1) <- c(\"Year\", \"Month\",\"robbery\",\"unemployment\", \"Date\")\nrmse2 <- data.frame(yr,m,rmse2)\nrmse2$date <- as.Date(paste(rmse2$yr, rmse2$m, \"01\", sep = \"-\"))\nnames(rmse2) <- c(\"Year\", \"Month\",\"robbery\",\"unemployment\", \"Date\")\n\nggplot() + \n  geom_line(data = rmse1, aes(x = Date, y = robbery),color = \"blue\") +\n  geom_line(data = rmse2, aes(x = Date, y = robbery),color = \"red\") +\n  labs(\n    title = \"CV RMSE for robbery\",\n    x = \"Date\",\n    y = \"RMSE\",\n    guides(colour=guide_legend(title=\"Fit\")))\n\nggplot() + \n  geom_line(data = rmse1, aes(x = Date, y = unemployment),color = \"blue\") +\n  geom_line(data = rmse2, aes(x = Date, y = unemployment),color = \"red\") +\n  labs(\n    title = \"CV RMSE for unemployment\",\n    x = \"Date\",\n    y = \"RMSE\",\n    guides(colour=guide_legend(title=\"Fit\")))\n\nmean(rmse1$robbery)\nmean(rmse2$robbery)\n\nmean(rmse1$unemployment)\nmean(rmse2$unemployment)\n```\n\nThe models are very close in performance, but it looks like VAR(3) is slightly better so we will forecast with that model. \n\n### Forecast\n```{r}\nfit <- VAR(ts, p = 3, type = \"both\")\nplot(forecast(fit, 24))\n```\n\n\n## Controlled Substance Possession \\~ Marijuana Possession\n","srcMarkdownNoYaml":"\n\n```{r include = FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n```{r setup, include = FALSE}\nlibrary(vars)\nlibrary(reticulate)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(forecast)\nlibrary(TSstudio)\nlibrary(tseries)\nlibrary(gridExtra)\nlibrary(kableExtra)\nlibrary(astsa)\nload(\"unrate.Rdata\")\nload(\"arrest_data.Rdata\")\nload(\"arrests_ts.Rdata\")\n```\n\n```{r}\nunrate_ts <- ts(df$unrate, start = c(2006, 1), frequency = 12)\n```\n\n# Exogenous Variables\n\nThe number of arrests made in any city, especially one as large and diverse as New York City, is a figure that is influenced by many variables in addition to time. This means that modelling the number of arrests only on time may result in overlooking valuable information that could be used to fit a model that could forecast arrests even more accurately. Similar work has been done in the past, relating both the economy and labor markets to crime statistics.\n\nWe will take that approach here, drawing inspiration on the work mentioned in the introduction by Freeman in which he looks at \"the way decisions interact in a market setting\" [@freeman_chapter_1999]. He exhibits an important understanding of the influence economic factors have on crime, treating crime rates as another variable in our complex economic system. Looking at the labor market would be beneficial as well, as in the 1980's and 90's crime was seen to be closely related to unemployment rates [@gould_crime_2002].\n\nAnother variable that might be useful to look at is the state of the current election cycle. It is possible that when public officials are up for re-election, they might be more incentivized to take more action to lower crime rates.\n\n# Models to Fit\n\nTwo types of models will be fit here. We will use an ARIMAX or SARIMAX model when looking at the effect of one or more exogenous variables in predicting the number of arrests. We will use a VAR model when looking at how crime and other time series variables are influenced by each other. The specific models are listed below:\n\n-   (ARIMAX) Total Arrests \\~ Unemployment Rate\n\n-   (ARIMAX) Total Arrests \\~ Election Year\n\n-   (ARIMAX) Murder \\~ Unemployment Rate + GDP\n\n-   (VAR) Robbery \\~ Unemployment Rate\n\n-   (VAR) Controlled Substance Possession \\~ Marijuana Possession\n\n## Total Arrests ~ Unemployment Rate\n\nWe have a univariate time series in total arrests and we want to see the effect the exogenous variable of unemployment rate has on that time series. We will fit an ARIMAX model, Total Arrests \\~ Unemployment Rate. Unemployment data is for the New York City Metropolitan Area and obtained from [here](https://fred.stlouisfed.org/categories/30789).\n\n```{r}\nmonth <- as.Date(arrests_by_crime$month)\ndd <- data.frame(month, arrests = arrests_ts, unrate = unrate_ts)\n\nkable(head(dd))\n```\n\n```{r}\ndd.ts <- ts(dd, start = c(2006, 1), frequency = 12)\n\nautoplot(dd.ts[,c(2,3)], facets = TRUE) +\n  xlab(\"Year\") + ylab(\"\") +\n  ggtitle(\"Variables influencing Arrests in NYC\")\n```\n\nThere looks to be some relation between these two variables, with the spike in 2020 in unemployment rate being at the same time as the low arrest rate, though we should fit a model to see if this relationship is substantial.\n\n### Fitting Using auto.arima\n\n```{r}\nxreg <- cbind(unrate = dd.ts[,\"unrate\"])\n\nauto_model <- auto.arima(dd.ts[,\"arrests\"], xreg = xreg)\nsummary(auto_model)\ncheckresiduals(auto_model)\n```\n\nWe have a SARIMAX model, a regression model with ARIMA(0,1,2)(2,0,0)\\[12\\] errors.\n\n### Fitting Manually\n\nWe first fit a linear regression model predicting arrests using unemployment rate. The we will fit an ARIMA/SARIMA model for the residuals.\n\n```{r}\nfit.reg <- lm(arrests ~ unrate, data = dd)\nsummary(fit.reg)\n```\n\n```{r, echo = TRUE}\nres.fit <- ts(residuals(fit.reg), start = c(2006, 1), frequency = 12)\nggtsdisplay(res.fit)\nggtsdisplay(res.fit %>% diff())\nggtsdisplay(res.fit %>% diff() %>% diff(12))\n```\n\nWe will try the following parameters:\n\n-   p: 1, 4\n-   d: 0, 1\n-   q: 1, 4\n-   P: 1\n-   D: 0, 1\n-   Q: 1, 2, 3\n\n```{r}\ni <- 1\n\ntemp <- data.frame()\nls <- matrix(rep(NA,9*28), nrow=28)\n\nfor(p in c(1,4)){\n  for(q in c(1,4)){\n    for(d in c(0,1)){\n      for(P in c(1)){\n        for(Q in c(1,2,3)){\n          for(D in c(0,1)){\n            if(p + d + q + P + D + Q<= 9){\n              tryCatch({\n                model <- Arima(res.fit, order = c(p, d, q), seasonal = c(P, D, Q))\n                ls[i,] <- c(p, d, q, P, D, Q, model$aic, model$bic, model$aicc)\n              }, error = function(err) {\n                cat()\n              }, finally = {\n                i <- i + 1\n              })\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\ntemp <- as.data.frame(ls)\nnames(temp) <- c(\"p\",\"d\",\"q\",\"P\", \"D\", \"Q\", \"AIC\",\"BIC\",\"AICc\")\n\n\n\n```\n\n### Model Selection and Diagnostics\n\n#### Minimum AIC\n\n```{r, echo=FALSE}\nkable(temp[which.min(temp$AIC),])\n```\n\n#### Minimum BIC\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$BIC),])\n```\n\n#### Minimum AICc\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$AICc),])\n```\n\nIt is clear that the best model is one with parameters $p=1, d=1, q=1, P=1, D=1, Q=3$. We now check the model diagnostics.\n\n```{r, echo = FALSE}\nset.seed(621)\nmodel_output <- capture.output(sarima(res.fit, 1, 1, 1, 1, 1, 3, 12))\n```\n\nThe Ljung-Box statistic p-values suggest that there is no correlation between residuals, meaning we have a good enough model. We will proceed with the model SARIMA(1, 1, 1)(1, 1, 2)12. The information criteria are all similar between the auto model and this model. We will proceed with this model. \n\n#### Fitted vs. Actual\n\n```{r, echo=FALSE}\nmodel_fit <- Arima(res.fit, order = c(1, 1, 1), seasonal = c(1, 1, 3))\nplot(res.fit, col = \"blue\")\nlines(fitted(model_fit), col = \"green\")\nlegend(x = \"topright\", legend = c(\"res.fit\", \"fit1\"), fill = 4:1)\n```\n\n### Cross Validation\n```{r}\n# minimum data length for fitting\nk <- 48\nn <- length(res.fit)\n\nst <- tsp(res.fit)[1] + (k - 2)/12 # ending point: October 2009\n\n\nrmse1 <- matrix(NA,n-k,12)\nrmse2 <- matrix(NA,n-k,12)\n\nfor(i in 1:(n - k)) {\n  tryCatch({\n    xtrain <- window(res.fit, end = st + i/12)\n    xtest <- window(res.fit, start = st + (i + 1)/12, end = st + (i + 12)/12)\n    \n    fit1 <- Arima(xtrain, \n                 order = c(1, 1, 1), \n                 seasonal = c(1, 1, 3),\n                 method = \"ML\")\n    \n    fcast1 <- forecast(fit1, h = 12)\n    \n    fit2 <- Arima(xtrain, \n                 order = c(0, 1, 2), \n                 seasonal = c(2, 0, 0),\n                 method = \"ML\")\n    \n    fcast2 <- forecast(fit2, h = 12)\n    \n    rmse1[i, 1:length(xtest)] <- sqrt((fcast1$mean-xtest)^2)\n    rmse2[i, 1:length(xtest)] <- sqrt((fcast2$mean-xtest)^2)\n  }, error = function(err) {\n                cat()\n              })\n}\n\nplot(1:12, colMeans(rmse1,na.rm=TRUE), type=\"l\", col=2, xlab=\"horizon\", ylab=\"RMSE\")\nlines(1:12, colMeans(rmse2,na.rm=TRUE), type=\"l\", col=3, xlab=\"horizon\", ylab=\"RMSE2\")\nlegend(\"topleft\",legend=c(\"manual fit\",\"auto fit\"),col=2:3,lty=1)\n```\n\n\n### Forecasting\n\n```{r, echo = FALSE}\nmodel_fit %>% forecast %>% autoplot()\n```\n\n\n## Total Arrests \\~ Election Year\n\n## Murder \\~ Unemployment Rate\n\n```{r}\nmonth <- as.Date(arrests_by_crime$month)\ndd <- data.frame(month, murder = murder_ts, unrate = unrate_ts)\n\nkable(head(dd))\n```\n\n```{r}\ndd.ts <- ts(dd, start = c(2006, 1), frequency = 12)\n\nautoplot(dd.ts[,c(2,3)], facets = TRUE) +\n  xlab(\"Year\") + ylab(\"\") +\n  ggtitle(\"Variables influencing Arrests in NYC\")\n```\n\nThere looks to be some relation between these two variables, though we should fit a model to see if this relationship is substantial.\n\n### Fitting Using auto.arima\n\n```{r}\nxreg <- cbind(unrate = dd.ts[,\"unrate\"])\n\nauto_model <- auto.arima(dd.ts[,\"murder\"], xreg = xreg)\nsummary(auto_model)\ncheckresiduals(auto_model)\n```\n\nWe have an ARIMAX model, a regression model with ARIMA(0,1,1) errors.\n\n### Fitting Manually\n\nWe first fit a linear regression model predicting arrests using unemployment rate. The we will fit an ARIMA/SARIMA model for the residuals.\n\n```{r}\nfit.reg <- lm(murder ~ unrate, data = dd)\nsummary(fit.reg)\n```\n\n```{r, echo = TRUE}\nres.fit <- ts(residuals(fit.reg), start = c(2006, 1), frequency = 12)\nggtsdisplay(res.fit)\nggtsdisplay(res.fit %>% diff())\n```\n\nWe will try the following parameters:\n\n-   p: 1, 2, 4\n-   d: 0, 1\n-   q: 1\n\n```{r}\ni <- 1\n\ntemp <- data.frame()\nls <- matrix(rep(NA,6*5), nrow=5)\n\nfor(p in c(1,4)){\n  for(q in c(1,4)){\n    for(d in c(0,1)){\n      if(p + d + q + P + D + Q<= 9){\n        tryCatch({\n          model <- Arima(res.fit, order = c(p, d, q))\n          ls[i,] <- c(p, d, q, model$aic, model$bic, model$aicc)\n        }, error = function(err) {\n          cat()\n        }, finally = {\n          i <- i + 1\n        })\n      }\n    }\n  }\n}\n\ntemp <- as.data.frame(ls)\nnames(temp) <- c(\"p\",\"d\",\"q\", \"AIC\",\"BIC\",\"AICc\")\n```\n\n### Model Selection and Diagnostics\n\n#### Minimum AIC\n\n```{r, echo=FALSE}\nkable(temp[which.min(temp$AIC),])\n```\n\n#### Minimum BIC\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$BIC),])\n```\n\n#### Minimum AICc\n\n```{r, echo = FALSE}\nkable(temp[which.min(temp$AICc),])\n```\n\nIt is clear that the best model is one with parameters $p=1, d=1, q=1$. We now check the model diagnostics.\n\n```{r, echo = FALSE}\nset.seed(621)\nmodel_output <- capture.output(sarima(res.fit, 1, 1, 1))\n```\n\n#### Fitted vs. Actual\n\n```{r, echo=FALSE}\nmodel_fit <- Arima(res.fit, order = c(1, 1, 1))\nplot(res.fit, col = \"blue\")\nlines(fitted(model_fit), col = \"green\")\nlegend(x = \"topright\", legend = c(\"res.fit\", \"fit1\"), fill = 4:1)\n```\n\n### Cross Validation\n\n### Forecasting\n\n```{r, echo = FALSE}\nmodel_fit %>% forecast %>% autoplot()\n```\n\nAdding unemployment rate resulted in little change from the previous model, suggesting that the two are not related.  \n\n## Robbery \\~ Unemployment Rate\n\n```{r}\nmonth <- as.Date(arrests_by_crime$month)\ndd <- data.frame(month, robbery = robbery_ts, unrate = unrate_ts)\n\nkable(head(dd))\n```\n\n```{r}\ndd.ts <- ts(dd, start = c(2006, 1), frequency = 12)\n\nautoplot(dd.ts[,c(2,3)], facets = TRUE) +\n  xlab(\"Year\") + ylab(\"\") +\n  ggtitle(\"Variables influencing Robbery Arrests in NYC\")\n```\n\nThere looks to be some relation between these two variables, with the spike in 2020 in unemployment rate being at the same time as the low arrest rate, though we should fit a model to see if this relationship is substantial.\n\n### Fitting Using VARSelect\n\n```{r}\nVARselect(dd[,c(2,3)], lag.max = 10, type = \"both\")\n```\n\nClearly p = 3 is a good parameter, we will also try VAR(1) in addition to VAR(3)\n\n```{r}\nsummary(vars::VAR(dd[, c(2,3)], p = 1, type = \"both\"))\nsummary(vars::VAR(dd[, c(2,3)], p = 3, type = \"both\"))\n```\n\n### Cross Validation\n```{r}\nts <- ts(dd[,c(2,3)], start = c(2006, 1), frequency = 12)\n\nk <- 72\n\nrmse1 <- matrix(NA, 132, 2)\nrmse2 <- matrix(NA, 132, 2)\n\nyear <- c()\n\nst <- tsp(ts)[1] + (k - 1)/12\n\nfor(i in 1:11) {\n  xtrain <- window(ts, end=st + i-1)\n  xtest <- window(ts, start=st + (i-1) + 1/12, end=st + i)\n  \n  # first model\n  fit <- VAR(ts, p=1, type='both')\n  fcast <- predict(fit, n.ahead = 12)\n  \n  frob<-fcast$fcst$robbery\n  funr<-fcast$fcst$unrate\n  \n  ff<-data.frame(frob[,1],funr[,1]) #collecting the forecasts for 2 variables\n  \n  year<-st + (i-1) + 1/12 #starting year\n  \n  ff<-ts(ff,start=c(year,1),frequency = 12)\n  \n  a = 12*i-11\n  b= 12*i \n  \n  tryCatch({\n    rmse1[c(a:b),]  <- sqrt((ff-xtest)^2)\n  }, error = function(err) {\n      cat(a, b)\n      rmse1[c(a:b),]  <- sqrt((ff-xtest)^2)\n  })\n  \n  \n  # second model\n  fit2 <- VAR(ts, p=3, type='both')\n  fcast2 <- predict(fit2, n.ahead = 12)\n  \n  frob<-fcast2$fcst$robbery\n  funr<-fcast2$fcst$unrate\n  \n  ff2<-data.frame(frob[,1],funr[,1]) #collecting the forecasts for 3 variables\n  \n  year<-st + (i-1) + 1/12 #starting year\n  \n  ff2<-ts(ff2,start=c(year,1),frequency = 12)\n  \n  a = 12*i-11\n  b= 12*i \n  \n  tryCatch({\n    rmse2[c(a:b),]  <- sqrt((ff2-xtest)^2)\n  }, error = function(err) {\n      cat(a, b)\n      rmse2[c(a:b),]  <- sqrt((ff2-xtest)^2)\n  })\n}\n```\n\n```{r}\nyr = rep(c(2012:2022),each =12) #year\nm = rep(paste0(1:12),11) #month\n\nrmse1 <- data.frame(yr,m,rmse1)\nrmse1$date <- as.Date(paste(rmse1$yr, rmse1$m, \"01\", sep = \"-\"))\nnames(rmse1) <- c(\"Year\", \"Month\",\"robbery\",\"unemployment\", \"Date\")\nrmse2 <- data.frame(yr,m,rmse2)\nrmse2$date <- as.Date(paste(rmse2$yr, rmse2$m, \"01\", sep = \"-\"))\nnames(rmse2) <- c(\"Year\", \"Month\",\"robbery\",\"unemployment\", \"Date\")\n\nggplot() + \n  geom_line(data = rmse1, aes(x = Date, y = robbery),color = \"blue\") +\n  geom_line(data = rmse2, aes(x = Date, y = robbery),color = \"red\") +\n  labs(\n    title = \"CV RMSE for robbery\",\n    x = \"Date\",\n    y = \"RMSE\",\n    guides(colour=guide_legend(title=\"Fit\")))\n\nggplot() + \n  geom_line(data = rmse1, aes(x = Date, y = unemployment),color = \"blue\") +\n  geom_line(data = rmse2, aes(x = Date, y = unemployment),color = \"red\") +\n  labs(\n    title = \"CV RMSE for unemployment\",\n    x = \"Date\",\n    y = \"RMSE\",\n    guides(colour=guide_legend(title=\"Fit\")))\n\nmean(rmse1$robbery)\nmean(rmse2$robbery)\n\nmean(rmse1$unemployment)\nmean(rmse2$unemployment)\n```\n\nThe models are very close in performance, but it looks like VAR(3) is slightly better so we will forecast with that model. \n\n### Forecast\n```{r}\nfit <- VAR(ts, p = 3, type = \"both\")\nplot(forecast(fit, 24))\n```\n\n\n## Controlled Substance Possession \\~ Marijuana Possession\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"arimax_sarimax_var.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"litera","fontsize":"1em","title":"ARIMAX/SARIMAX/VAR","editor_options":{"chunk_output_type":"inline"},"bibliography":["reference.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}