xlab("Arrest Date") +
ylab("Arrests")
arrests_plot
arrests_by_crime <- df %>%
group_by(pd_desc) %>%
summarize(total = n()) %>%
arrange(desc(total))
kable(head(arrests_by_crime, 15))
arrests_by_crime <- df %>%
group_by(month = floor_date(arrest_date, "month"), pd_desc) %>%
summarize(count = n()) %>%
pivot_wider(names_from = pd_desc, values_from = count, values_fill = 0) %>%
ungroup()
plot_ly(data = arrests_by_crime,
x = ~month,
y = ~`ASSAULT 3`,
name = "Assault 3",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
add_trace(data = arrests_by_crime,
x = ~month,
y = ~`MARIJUANA, POSSESSION 4 & 5`,
name = "Marijuana Possesion 4, 5",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
add_trace(data = arrests_by_crime,
x = ~month,
y = ~`CONTROLLED SUBSTANCE, POSSESSION 7`,
name = "Controlled Substance Possession 7",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
add_trace(data = arrests_by_crime,
x = ~month,
y = ~`ASSAULT 2,1,UNCLASSIFIED`,
name = "Assault 2, 1, or Unclassified",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
add_trace(data = arrests_by_crime,
x = ~month,
y = ~`LARCENY,PETIT FROM OPEN AREAS,UNCLASSIFIED`,
name = "Larceny, Petit",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
add_trace(data = arrests_by_crime,
x = ~month,
y = ~`INTOXICATED DRIVING,ALCOHOL`,
name = "Inoxicated Driving, Alcohol",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
add_trace(data = arrests_by_crime,
x = ~month,
y = ~`WEAPONS, POSSESSION, ETC`,
name = "Weapons Possession",
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
layout(title = "Crime by Type",
xaxis = list(title = ""),
yaxis = list(title = "Arrests"))
save(list = ("arrests_by_crime", "arrests_by_date"), fiele = "arrest_data.Rdata")
save(list = ("arrests_by_crime", "arrests_by_date"), file = "arrest_data.Rdata")
save(list = c("arrests_by_crime", "arrests_by_date"), file = "arrest_data.Rdata")
load("arrest_data.Rdata")
plot_ly(data = arrests_by_crime,
x = ~month,
y = ~`ASSAULT 3`,
name = "Assault 3",
type = "scatter",
mode = "lines",
showlegend = TRUE)
library(reticulate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(forecast)
library(TSstudio)
library(tseries)
library(gridExtra)
ggplot(data = arrests_by_date, aes(x = month, y = count)) +
geom_line() +
ggtitle("Arrests in New York City by Date") +
xlab("Arrest Date") +
ylab("Arrests") +
theme(
panel.grid.major = element_line(color = "grey", size = 0.5),
panel.grid.minor = element_line(color = "grey", size = 0.2)
) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y")
ggplot(data = arrests_by_date, aes(x = month, y = total)) +
geom_line() +
ggtitle("Arrests in New York City by Date") +
xlab("Arrest Date") +
ylab("Arrests") +
theme(
panel.grid.major = element_line(color = "grey", size = 0.5),
panel.grid.minor = element_line(color = "grey", size = 0.2)
) +
scale_x_date(date_breaks = "1 year",
date_labels = "%Y")
library(plotly)
plot_ly(data = arrests_by_date,
x = ~month,
y = ~total,
type = "scatter",
mode = "lines",
showlegend = TRUE) %>%
layout(title = "Crime by Type",
xaxis = list(title = ""),
yaxis = list(title = "Arrests"))
assault_3_ts <- ts(arrests_by_crime$`ASSAULT 3`, start = c(2006, 1), frequency = 12)
ts_lags(assault_3_ts, lags = 1:12)
library(reticulate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(forecast)
library(TSstudio)
library(tseries)
library(gridExtra)
library(kableExtra)
library(astsa)
load("arrests_ts.Rdata")
arrests_ts %>% diff() %>% ggtsdisplay()
arrests_ts %>% diff() %>% diff() %>% ggtsdisplay()
arrests_ts %>% diff() %>% diff() %>% diff() %>% ggtsdisplay()
p <- 1
d <- 1
q <- 1
i <- 1
temp <- data.frame()
ls <- matrix(rep(NA,6*32), nrow=32)
for(p in c(1,2,3,4)){
for(q in c(1,2,4,5)){
for(d in c(1,2,3)){
if(p + d + q <= 8){
model <- Arima(arrests_ts, order = c(p, d, q), include.drift = FALSE)
ls[i,] <- c(p, d, q, model$aic, model$bic, model$aicc)
i <- i +1
}
}
}
}
temp <- as.data.frame(ls)
names(temp) <- c("p","d","q","AIC","BIC","AICc")
kable(temp)
kable(temp[which.min(temp$AIC),])
kable(temp[which.min(temp$BIC),])
kable(temp[which.min(temp$AICc),])
set.seed(621)
model_output <- capture.output(sarima(arrests_ts, 3, 1, 4))
cat(model_output[205:239], model_output[length(model_output)], sep = "\n")
model_fit <- Arima(arrests_ts, order = c(3, 1, 4), include.drift = TRUE)
plot(arrests_ts, col = "blue")
lines(fitted(model_fit), col = "green")
legend(x = "topright", legend = c("arrests_ts", "fit"), fill = 4:1)
auto.arima(model_fit)
model_fit <- Arima(arrests_ts, order = c(3, 1, 4), include.drift = TRUE)
plot(arrests_ts, col = "blue")
lines(fitted(model_fit), col = "green")
legend(x = "topright", legend = c("arrests_ts", "fit"), fill = 4:1)
auto.arima(model_fit)
arima_sim(list(order = c(3, 1, 4), ar = 0.9))
arima.sim(list(order = c(3, 1, 4), ar = 0.9))
arima.sim(list(order = c(3, 1, 4), ar = 0.9), n = 1000)
auto.arima(arrests_ts)
auto.arima(arrests_ts)
auto_model <- auto.arima(arrests_ts)
auto_model
model_fit <- Arima(arrests_ts, order = c(3, 1, 4), include.drift = TRUE)
plot(arrests_ts, col = "blue")
lines(fitted(model_fit), col = "green")
lines(fitted(auto_model), col = "red")
legend(x = "topright", legend = c("arrests_ts", "fit", "auto fit"), fill = 4:1)
autoplot(arrests_ts) +
autolayer(meanf(arrests_ts, h = 36),
series = "Mean", PI = FALSE) +
autolayer(naive(arrests_ts, h = 36),
series = "Naïve", PI = FALSE) +
autolayer(snaive(arrests_ts, h = 36),
series = "SNaïve", PI = FALSE) +
autolayer(rwf(arrests_ts, h = 36, drift = TRUE),
series = "Drift", PI = FALSE) +
autolayer(forecast(model_fit, 36),
series = "Fit", PI = FALSE) +
guides(color = guide_legend(title = "Forecast"))
model_fit <- Arima(arrests_ts, order = c(3, 1, 4), include.drift = TRUE)
plot(arrests_ts, col = "blue")
lines(fitted(model_fit), col = "green")
lines(fitted(auto_model), col = "red")
legend(x = "topright", legend = c("arrests_ts", "fit1", "fit2"), fill = 4:1)
autoplot(arrests_ts) +
autolayer(meanf(arrests_ts, h = 36),
series = "Mean", PI = FALSE) +
autolayer(naive(arrests_ts, h = 36),
series = "Naïve", PI = FALSE) +
autolayer(snaive(arrests_ts, h = 36),
series = "SNaïve", PI = FALSE) +
autolayer(rwf(arrests_ts, h = 36, drift = TRUE),
series = "Drift", PI = FALSE) +
autolayer(forecast(model_fit, 36),
series = "Fit1", PI = FALSE) +
autolayer(forecast(aut_model, 36),
series = "Fit2", PI = FALSE) +
guides(color = guide_legend(title = "Forecast"))
autoplot(arrests_ts) +
autolayer(meanf(arrests_ts, h = 36),
series = "Mean", PI = FALSE) +
autolayer(naive(arrests_ts, h = 36),
series = "Naïve", PI = FALSE) +
autolayer(snaive(arrests_ts, h = 36),
series = "SNaïve", PI = FALSE) +
autolayer(rwf(arrests_ts, h = 36, drift = TRUE),
series = "Drift", PI = FALSE) +
autolayer(forecast(model_fit, 36),
series = "Fit1", PI = FALSE) +
autolayer(forecast(auto_model, 36),
series = "Fit2", PI = FALSE) +
guides(color = guide_legend(title = "Forecast"))
accuracy(snaive(arrests_ts, h = 36))
summary(model_fit)
summary(auto_model)
summary(model_fit)
summary(auto_model)
auto_model %>% forecast %>% autoplot()
model_fit %>% forecast %>% autoplot()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
load("arrest_data.Rdata")
df<- df %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
load("arrest_data.Rdata")
reticulate::repl_python()
load("arrest_data.Rdata")
df <- df %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate
reticulate::repl_python()
library(reticulate)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
load("~/Repositories/dsan5600/test.Rdata")
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
reticulate::repl_python()
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
reticulate::repl_python()
read.csv("NYPD_Arrests_Data__Historic__20231017.csv")
df <- read.csv("NYPD_Arrests_Data__Historic__20231017.csv")
View(df)
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
df <- df %>%
select("arrest_date", "pd_desc", "law_cat_cd", "age_group", "perp_sex", "perp_race")
df <- df %>%
select(ARREST_DATE, PD_DESC, LAW_CAT_CD, AGE_GROUP, PERP_SEX, PERP_RACE)
df <- df %>%
select(ARREST_DATE, PD_DESC, LAW_CAT_CD, AGE_GROUP, PERP_SEX, PERP_RACE) %>%
mutate(month = month(ARREST_DATE),
year = year(ARREST_DATE)) %>%
arrange(desc(ARREST_DATE))
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = as.Date(ARREST_DATE),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- read.csv("NYPD_Arrests_Data__Historic__20231017.csv")
save(df, file = "raw_data.Rdata")
load("raw_data.Rdata")
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
load("raw_data.Rdata")
df <- df %>%
select(arrest_date = as.Date(ARREST_DATE),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = as.Date(df$ARREST_DATE),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = as.Date(df$ARREST_DATE, format = "%m/%d/%Y"),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = ARREST_DATE),
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = as.Date(df$ARREST_DATE, format = "%m/%d/%Y"),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE)
typeof(df$ARREST_DATE)
load("raw_data.Rdata")
df <- df %>%
select(arrest_date = as.Date(df$ARREST_DATE, format = "%m/%d/%Y"),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date, format = "%m/%d/%Y"),
year = year(arrest_date, format = "%m/%d/%Y" ))
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = as.Date(ARREST_DATE, format = "%m/%d/%Y"),
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(month = month(arrest_date),
year = year(arrest_date))
df <- df %>%
select(arrest_date = ARREST_DATE,
pd_desc = PD_DESC,
law_cat_cd = LAW_CAT_CD,
age_group = AGE_GROUP,
perp_sex = PERP_SEX,
perp_race = PERP_RACE) %>%
mutate(arrest_date = as.Date(arrest_date, format = "%m/%d/%Y"),
month = month(arrest_date),
year = year(arrest_date))
arrests_by_date <- df %>%
group_by(month = floor_date(arrest_date, "month")) %>%
summarize(total = n())
arrests_plot <- ggplot(data = arrests_by_date, aes(x = month, y = total)) +
geom_line() +
ggtitle("Arrests in New York City by Date") +
xlab("Arrest Date") +
ylab("Arrests")
arrests_plot
arrests_by_crime <- df %>%
group_by(pd_desc) %>%
summarize(total = n()) %>%
arrange(desc(total))
kable(head(arrests_by_crime, 15))
arrests_by_crime <- df %>%
group_by(month = floor_date(arrest_date, "month"), pd_desc) %>%
summarize(count = n()) %>%
pivot_wider(names_from = pd_desc, values_from = count, values_fill = 0) %>%
ungroup()
reticulate::repl_python()
df <- read_csv('output.csv')
df <- read.csv('output.csv')
View(df)
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
load("raw_data.Rdata")
df <- df %>%
mutate(arrest_date = as.Date(arrest_date, format = "%m/%d/%Y"),
month = month(arrest_date),
year = year(arrest_date))
df <- read_csv('output.csv')
save(df, file = "raw_data.Rdata")
df <- df %>%
mutate(arrest_date = as.Date(arrest_date, format = "%m/%d/%Y"),
month = month(arrest_date),
year = year(arrest_date))
library(reticulate)
library(tidyverse)
library(lubridate)
library(plotly)
library(kableExtra)
use_condaenv("r-env", required = TRUE)
load("raw_data.Rdata")
reticulate::repl_python()
